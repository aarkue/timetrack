# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_project:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16.x
 
      - name: Install ionic cli
        run: sudo npm install -g @ionic/cli
        
      - name: Install packages
        run: npm install
        
      - name: Ionic build
        run: ionic build --prod
        
      - name: Upload to siter.eu
        env:
          SITER_SITE: ${{ secrets.SITER_SITE }}
          SITER_TOKEN: ${{ secrets.SITER_TOKEN }}
        run: npx @getmeli/cli upload --branch main --url https://siter.eu --site $SITER_SITE --token $SITER_TOKEN  www/
      
      - name: Prepare android build
        run: ionic cap copy android
      - name: Prepare android
        env:
            KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
            ALIAS: ${{ secrets.ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
            KEYSTORE: ${{ secrets.KEYSTORE }}
        run: |
            chmod +x ./android/gradlew
            # Secrets
            echo "$KEYSTORE" | base64 -d > ./android/app/key.jks
            echo "RELEASE_STORE_FILE=key.jks" >> ./android/gradle.properties
            echo "RELEASE_STORE_PASSWORD=$KEYSTORE_PASSWORD" >> ./android/gradle.properties
            echo "RELEASE_KEY_ALIAS=$ALIAS" >> ./android/gradle.properties
            echo "RELEASE_KEY_PASSWORD=$KEY_PASSWORD" >> ./android/gradle.properties
      - name: Build android
        run: cd ./android/ && ./gradlew build
        
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: timetrack-apk # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ./android/app/build/outputs/apk/release/app-release.apk
          retention-days: 3
        
